name: Release

on:
  push:
    tags:
      - "v*"

env:
  BUILD_TYPE: Release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install cURL package
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: Upload binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file_glob: true
        file: "**/EternalPatcher"
        tag: ${{ github.ref }}

  release-static:
    runs-on: ubuntu-latest
    env:
      ETERNALPATCHERLINUX_STATIC: '1'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Alpine
      uses: jirutka/setup-alpine@v1
      with:
        branch: v3.17

    - name: Install dependencies
      run: apk add build-base cmake curl-dev curl-static nghttp2-dev nghttp2-static libssh2-dev libssh2-static brotli-static openssl-libs-static zlib-static
      shell: alpine.sh --root {0}

    - name: Configure CMake
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      shell: alpine.sh {0}

    - name: Build
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}
      shell: alpine.sh {0}

    - name: Upload static binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file_glob: true
        file: "**/EternalPatcher"
        tag: ${{ github.ref }}
